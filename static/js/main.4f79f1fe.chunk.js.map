{"version":3,"sources":["app/components/Grid/Grid.module.scss","app/components/Border/Border.module.scss","app/components/Widgets/ConsoleWidget/ConsoleWidget.module.scss","app/pages/LoginPage/LoginPage.module.scss","app/components/Widgets/TapeWidget/TapeWidget.module.scss","app/components/Widgets/CodeWidget/CodeWidget.module.scss","app/components/Widgets/ResultWidget/ResultWidget.module.scss","app/components/Widgets/AnswerWidget/AnswerWidget.module.scss","app/pages/QuestionPage/AddPage/ControlWidget/ControlWidget.module.scss","app/pages/QuestionPage/TagWidget/TagWidget.module.scss","app/pages/QuestionPage/AddPage/ReactPage/ReactPage.module.scss","app/components/Widgets/TestWidget/TestWidget.module.scss","app/pages/QuestionPage/AddPage/JavaScriptPage/JavaScriptPage.module.scss","app/pages/QuestionPage/EditPage/ControlWidget/ControlWidget.module.scss","app/pages/QuestionPage/EditPage/ReactPage/ReactPage.module.scss","app/pages/QuestionPage/EditPage/JavaScriptPage/JavaScriptPage.module.scss","app/components/Widgets/ControlWidget/ControlWidget.module.scss","app/pages/ExamPage/ReactPage/ReactPage.module.scss","app/pages/ExamPage/JavaScriptPage/JavaScriptPage.module.scss","app/utils/sentry.js","app/reducers/javascript.js","app/reducers/react.js","app/reducers/login.js","app/utils/authLogin.js","app/reducers/category.js","app/reducers/tape.js","app/reducers/console.js","app/reducers/index.js","aws-exports.js","app/utils/question.js","app/components/Border/index.js","app/components/Grid/index.js","app/components/Grid/GridItem.js","app/components/Widgets/CodeWidget/index.js","app/components/Widgets/ResultWidget/index.js","app/components/Widgets/AnswerWidget/index.js","app/utils/spy.js","app/utils/tape.js","app/utils/runCode.js","app/questions/index.js","app/questions/javascript.js","app/questions/react.js","app/components/Selectors/CategorySelector/index.js","app/pages/QuestionPage/AddPage/ControlWidget/index.js","app/pages/QuestionPage/TagWidget/index.js","app/pages/QuestionPage/AddPage/ReactPage/index.js","app/components/Widgets/TestWidget/index.js","app/components/Widgets/TapeWidget/index.js","app/pages/QuestionPage/AddPage/JavaScriptPage/index.js","app/pages/QuestionPage/AddPage/index.js","app/components/Selectors/QuestionSelector/index.js","app/pages/QuestionPage/EditPage/ControlWidget/index.js","app/pages/QuestionPage/EditPage/ReactPage/index.js","app/pages/QuestionPage/EditPage/JavaScriptPage/index.js","app/pages/QuestionPage/EditPage/index.js","app/pages/NotFoundPage/index.js","app/routes/Admin.js","app/pages/LoginPage/index.js","app/actions/login.js","app/utils/consoleFactory.js","app/utils/stateHelper.js","app/components/Widgets/ConsoleWidget/index.js","app/components/Widgets/ControlWidget/index.js","app/pages/ExamPage/ReactPage/index.js","app/actions/console.js","app/pages/ExamPage/JavaScriptPage/index.js","app/actions/tape.js","app/pages/ExamPage/index.js","app/actions/code.js","app/actions/category.js","app/routes/Guest.js","App.js","index.js"],"names":["module","exports","grid","item","border","vertical","horizontal","console-widget","console","login","login-input","error","tape","test","description","assert","name","actual","not-equal","expected","ok","fail","diff","code","ace_layer","result","answer","control","tag-widget","app","test-widget","Sentry","dsn","state","arguments","length","undefined","index","action","type","toUpperCase","Object","objectSpread","defineProperty","compiledCode","rawCode","isLogin","password","category","concat","toConsumableArray","data","Console","key","args","reducer","combineReducers","javascript","react","_console","awsmobile","aws_project_region","aws_appsync_graphqlEndpoint","aws_appsync_authenticationType","aws_cognito_identity_pool_id","aws_cognito_region","aws_user_pools_id","aws_user_pools_web_client_id","aws_content_delivery_bucket","aws_content_delivery_bucket_region","aws_content_delivery_url","Amplify","configure","awsExportConfig","listQuestions","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","query","wrap","_context","prev","next","API","graphql","graphqlOperation","sent","abrupt","stop","this","_x","apply","createQuestion","_ref2","_callee2","tags","content","params","_context2","input","log","_x2","getQuestion","_ref3","_callee3","id","_context3","_x3","updateQuestion","_ref4","_callee4","_context4","_x4","Border","props","_this","classCallCheck","_this$props","possibleConstructorReturn","getPrototypeOf","call","allowWidth","allowHeight","disabled","borderSize","ref","React","createRef","resize","bind","assertThisInitialized","startResize","endResize","style","e","_this$props2","height","width","onUpdate","maxHeight","maxWidth","minWidth","minHeight","newHeight","clientY","current","offsetTop","newWidth","clientX","offsetLeft","window","removeEventListener","dispatchEvent","Event","target","contains","addEventListener","_this$props3","children","className","finalClassName","styles","paddingRight","paddingBottom","react_default","createElement","onMouseDown","Component","Grid","onResize","updateFullState","_this$ref$current","totalWidth","clientWidth","totalHeight","clientHeight","newData","map","column","indexOfColumn","indexOfItem","sumOfWidth","slice","c","reduce","cal","val","sumOfHeight","setState","updateGridState","_this$ref$current2","layout","columns","newCal","x","sort","b","y","autoResize","_this2","Math","max","min","finalWidth","components_Border","w","JSON","stringify","itemInData","itemInColumns","isDisabled","static","h","find","GridItem","CodeWidget","handleCodeChange","mode","theme","react_ace_lib_default","showPrintMargin","onChange","value","tabSize","debounceChangePeriod","ResultWidget","AnswerWidget","spy","obj","methodName","origFn","callHistory","calledWith","secret","random","toFixed","_len","Array","_key","push","join","_len2","_key2","callCount","restore","tryCatchPatch","t","testBlock","comment","getPatchedTape","patches","harness","createHarness","createStream","objectMode","on","subtest","should","_args$slice","cb","slicedToArray","Error","wrapCode","replace","loopHead","runCode","_ref$wrappedConsole","wrappedConsole","onTapeUpdate","script","context","clock","sinon","useFakeTimers","sandbox","setTimeout","describe","ReactDOM","root","document","getElementById","renderToString","vm","Script","createContext","runInContext","Questions","getCategories","keys","getQuestions","categories","Option","Select","CategorySelector","es_select","defaultValue","q","i","ControlWidget","onChangeName","onSubmit","onChangeCategory","Selectors_CategorySelector","placeholder","marginRight","es_button","onClick","TagWidget","inputVisible","inputValue","handleClose","removedTag","onTagUpdate","filter","tag","showInput","focus","handleInputChange","handleInputConfirm","newTags","indexOf","saveInputRef","_this$state","isLongTag","tagElem","es_tag","closable","afterClose","tooltip","title","size","onBlur","onPressEnter","background","borderStyle","icon","ReactPage","onCodeChange","fullCode","transform","presets","decoratorsBeforeExport","plugins","_this$state2","isLoading","controlHeight","debouncedRunCode","nextProps","nextState","previousCompiledCode","_this$state3","innerWidth","innerHeight","spin","spinning","Grid_Grid","Grid_GridItem","Widgets_CodeWidget","newCode","Widgets_AnswerWidget","AddPage_ControlWidget","Widgets_ResultWidget","QuestionPage_TagWidget","TestWidget","_ref$readOnly","readOnly","_ref$handleCodeChange","TestRow","row","AssertRow","Fragment","EndRow","DescriptionRow","getRow","TapeWidget_TestRow","assign","TapeWidget_AssertRow","TapeWidget_EndRow","TapeWidget_DescriptionRow","TapeWidget","JavaScriptPage","addTape","actions","_this3","Widgets_TestWidget","newTest","Widgets_TapeWidget","Page","t0","alert","message","history","AddPage_ReactPage","AddPage_JavaScriptPage","getPageComponent","QuestionSelector","list","QuestionSelector_Option","categoryIndex","questionIndex","onChangeQuestion","questionList","Selectors_QuestionSelector","_result$data$getQuest","items","EditPage_ControlWidget","EditPage_ReactPage","EditPage_JavaScriptPage","NotFoundPage","AwsConfig","Question","match","Switch","Route","path","component","QuestionAddPage","QuestionEditPage","withAuthenticator","render","LoginPage","preventDefault","submitPassword","display","htmlType","withRouter","connect","dispatch","createWrappedConsole","Text","text","trim","ConsoleWidget","stack","ConsoleWidget_Text","onReset","questions","resetConsole","Widgets_ControlWidget","Widgets_ConsoleWidget","resetTape","question","changeCode","resetQuestion","changeCategory","changeQuestion","_dispatch","prevProps","previousCategoryIndex","ExamPage_ReactPage","ExamPage_JavaScriptPage","_getStateInformation","_state$type","getStateInformation","Guest","ExamPage","App","BrowserRouter","basename","process","Admin","onerror","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","es","src_App"],"mappings":"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","file":"static/js/main.4f79f1fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__1OMwv\",\"item\":\"Grid_item__xP_ro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"Border_border__3HdKF\",\"vertical\":\"Border_vertical__Sybgq\",\"horizontal\":\"Border_horizontal__2gb9-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"console-widget\":\"ConsoleWidget_console-widget__87QzV\",\"console\":\"ConsoleWidget_console__34YEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginPage_login__A-xCx\",\"login-input\":\"LoginPage_login-input__3yRUw\",\"error\":\"LoginPage_error__fMxom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tape\":\"TapeWidget_tape__iBI5_\",\"test\":\"TapeWidget_test__3bvGl\",\"description\":\"TapeWidget_description__2tl_l\",\"assert\":\"TapeWidget_assert__wtP1i\",\"name\":\"TapeWidget_name__kUXrc\",\"actual\":\"TapeWidget_actual__tE2dy\",\"not-equal\":\"TapeWidget_not-equal__3jz9b\",\"expected\":\"TapeWidget_expected__LdG37\",\"ok\":\"TapeWidget_ok__1AJSI\",\"fail\":\"TapeWidget_fail__Tuxj_\",\"diff\":\"TapeWidget_diff__7dNev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code\":\"CodeWidget_code__228xP\",\"ace_layer\":\"CodeWidget_ace_layer__Cc7Nx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"ResultWidget_result__odlAR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answer\":\"AnswerWidget_answer__3Hbzt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ControlWidget_control__-kQEf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag-widget\":\"TagWidget_tag-widget__2cgfp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"ReactPage_app__19ov5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test-widget\":\"TestWidget_test-widget__3zPIZ\",\"ace_layer\":\"TestWidget_ace_layer__2RqaG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"JavaScriptPage_app__2QrHl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ControlWidget_control__3IKpI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"ReactPage_app__3hMal\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"JavaScriptPage_app__GgvWg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ControlWidget_control__34QO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"ReactPage_app__3Y6pg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"JavaScriptPage_app__17mW6\"};","import * as Sentry from '@sentry/browser';\n\nSentry.init({\n  dsn: 'https://466d7a4e8d174006b5449330cc18e4cc@sentry.io/1323316'\n});\n\nconst initErrorLogging = () => {\n  window.onerror = (e) => {\n    Sentry.captureException(e);\n  };\n};\n\nexport {\n  initErrorLogging\n};\n","const code = (state = { index: 0 }, action) => {\n  switch (action.type.toUpperCase()) {\n    case 'JAVASCRIPT/CODE/RESET':\n      return state;\n    case 'JAVASCRIPT/CODE/CHANGE':\n      return {\n        ...state,\n        compiledCode: action.compiledCode || state.compiledCode,\n        [state.index]: {\n          code: action.rawCode\n        }\n      };\n    case 'JAVASCRIPT/QUESTION/RESET':\n      return {\n        ...state,\n        [state.index]: {\n          code: ''\n        }\n      };\n    case 'JAVASCRIPT/QUESTION/CHANGE':\n      return {\n        ...state,\n        index: action.index,\n        compiledCode: ''\n      };\n    default:\n      return state;\n  }\n};\n\nexport default code;\n","const code = (state = { index: 0 }, action) => {\n  switch (action.type.toUpperCase()) {\n    case 'REACT/CODE/RESET':\n      return state;\n    case 'REACT/CODE/CHANGE':\n      return {\n        ...state,\n        compiledCode: action.compiledCode || state.compiledCode,\n        [state.index]: {\n          code: action.rawCode\n        }\n      };\n    case 'REACT/QUESTION/RESET':\n      return {\n        ...state,\n        compiledCode: '',\n        [state.index]: {\n          code: ''\n        }\n      };\n    case 'REACT/QUESTION/CHANGE':\n      return {\n        ...state,\n        index: action.index,\n        compiledCode: ''\n      };\n    default:\n      return state;\n  }\n};\n\nexport default code;\n","import { authLogin } from '../utils/authLogin';\n\nconst login = (state = { isLogin: false }, action) => {\n  switch (action.type) {\n    case 'LOGIN/LOGIN': {\n      return { isLogin: authLogin(action.password) };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default login;\n","const authLogin = s => true;\n\nexport {\n  authLogin\n}","const category = (state = { index: 0 }, action) => {\n  switch (action.type) {\n    case 'CATEGORY/RESET':\n      return { index: 0 };\n    case 'CATEGORY/CHANGE':\n      return {\n        ...state,\n        index: action.index\n      };\n    default:\n      return state;\n  }\n};\n\nexport default category;\n","const tape = (state = [], action) => {\n  switch (action.type) {\n    case 'TAPE/RESET': {\n      return [];\n    }\n    case 'TAPE/ADD': {\n      return [...state, action.data];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tape;\n","const Console = (state = [], action) => {\n  switch (action.type) {\n    case 'CONSOLE/RESET':\n      return [];\n    case 'CONSOLE/ADD':\n      return [\n        ...state,\n        {\n          key: action.key,\n          args: action.args\n        }\n      ];\n    default:\n      return state;\n  }\n};\n\nexport default Console;\n","import { combineReducers } from 'redux';\nimport javascript from './javascript';\nimport react from './react';\nimport login from './login';\nimport category from './category';\nimport tape from './tape';\nimport _console from './console';\n\nconst reducer = combineReducers({\n  javascript,\n  react,\n  login,\n  category,\n  tape,\n  console: _console\n});\n\nexport default reducer;\n","const awsmobile =  {\n  \"aws_project_region\": \"us-east-1\",\n  \"aws_appsync_graphqlEndpoint\": \"https://7hiay4be35bi5b2jujxw4lkfmu.appsync-api.us-east-1.amazonaws.com/graphql\",\n  \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\",\n  \"aws_cognito_identity_pool_id\": \"us-east-1:ac3970c1-998e-44f5-b8e7-915b61c672dd\",\n  \"aws_cognito_region\": \"us-east-1\",\n  \"aws_user_pools_id\": \"us-east-1_iZaYY7v3Z\",\n  \"aws_user_pools_web_client_id\": \"5doa5r4eeigmbvjmvo6475496a\",\n  \"aws_content_delivery_bucket\": \"innovap3-js-exam-dev\",\n  \"aws_content_delivery_bucket_region\": \"us-east-1\",\n  \"aws_content_delivery_url\": \"http://innovap3-js-exam-dev.s3-website-us-east-1.amazonaws.com\",\n  // \"aws_appsync_authenticationType\": \"API_KEY\",\n  // \"aws_appsync_apiKey\": \"da2-z3ajxf267jcg5lzlafb3ljbsxe\"\n};\n\nexport default awsmobile;\n","import Amplify, {\n  API,\n  graphqlOperation\n} from 'aws-amplify';\n\nimport awsExportConfig from 'aws-exports';\n\nAmplify.configure(awsExportConfig);\n\nconst listQuestions = async (type) => {\n  const query = `\n    query {\n      listQuestions (\n        filter: {\n          type:{\n            eq: \"${type}\"\n          }\n        }\n        limit: 1000\n      ) {\n        items{\n          id,\n          name,\n          type\n        }\n      }\n    }`;\n  const result = await API.graphql(graphqlOperation(query));\n  return result;\n};\n\nconst createQuestion = async (data) => {\n  const {\n    tags,\n    name,\n    code: content,\n    test,\n    type\n  } = data;\n  const params = {\n    input: {\n      name,\n      content,\n      test,\n      tags,\n      type\n    }\n  };\n  const query = `mutation CreateQuestion($input: CreateQuestionInput!) {\n    createQuestion(input: $input) {\n      id\n      name\n      content\n      test\n      type\n      tags\n    }\n  }`;\n  const result = await API.graphql(graphqlOperation(query, params));\n  console.log(result);\n  return result;\n};\n\nconst getQuestion = async (data) => {\n  const { id } = data;\n  const query = `query {\n    getQuestion(id: \"${id}\") {\n      content,\n      test,\n      tags\n    }\n  }`;\n  const result = await API.graphql(graphqlOperation(query));\n  return result;\n};\n\nconst updateQuestion = async (data) => {\n  const {\n    id,\n    content,\n    test,\n    tags\n  } = data;\n  const params = {\n    input: {\n      id,\n      content,\n      test,\n      tags\n    }\n  };\n  const query = `mutation UpdateQuestion($input: UpdateQuestionInput!) {\n    updateQuestion(input: $input) {\n      id\n      content\n      test\n      tags\n    }\n  }`;\n  const result = await API.graphql(graphqlOperation(query, params));\n  return result;\n};\n\nexport {\n  listQuestions,\n  createQuestion,\n  getQuestion,\n  updateQuestion\n};\n","import React, { Component } from 'react';\nimport styles from './Border.module.scss';\n\nclass Border extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      allowWidth,\n      allowHeight,\n      disabled,\n      borderSize\n    } = this.props;\n    this.ref = React.createRef();\n    this.resize = this.resize.bind(this);\n    this.startResize = this.startResize.bind(this);\n    this.endResize = this.endResize.bind(this);\n    this.borderSize = borderSize || 10;\n    this.disabled = disabled;\n    this.allowWidth = allowWidth;\n    this.allowHeight = allowHeight;\n    this.style = {};\n  }\n\n  resize(e) {\n    const {\n      allowHeight,\n      height,\n      width,\n      onUpdate,\n      allowWidth,\n      maxHeight,\n      maxWidth,\n      minWidth,\n      minHeight\n    } = this.props;\n    let newHeight = allowHeight\n      ? e.clientY - this.ref.current.offsetTop\n      : height;\n    if (maxHeight && newHeight > maxHeight) {\n      newHeight = maxHeight;\n    }\n    if (minHeight && newHeight < minHeight) {\n      newHeight = minHeight;\n    }\n    let newWidth = allowWidth\n      ? e.clientX - this.ref.current.offsetLeft\n      : width;\n    if (maxWidth && newWidth > maxWidth) {\n      newWidth = maxWidth;\n    }\n    if (minWidth && newWidth < minWidth) {\n      newWidth = minWidth;\n    }\n    onUpdate({\n      width: newWidth,\n      height: newHeight\n    });\n  }\n\n  endResize() {\n    window.removeEventListener('mousemove', this.resize);\n    window.removeEventListener('mouseup', this.endResize);\n    window.dispatchEvent(new Event('resize'));\n  }\n\n  startResize(e) {\n    if (e.target.contains(this.ref.current)) {\n      window.addEventListener('mousemove', this.resize);\n      window.addEventListener('mouseup', this.endResize);\n    }\n  }\n\n\n  render() {\n    const {\n      width,\n      height,\n      disabled,\n      children,\n      className\n    } = this.props;\n    this.style = {\n      ...this.style,\n      width: `${width}px`,\n      height: `${height}px`\n    };\n    let finalClassName = `${styles.border} ${className || ''}`;\n    if (!disabled && this.allowWidth) {\n      finalClassName = `${finalClassName} ${styles.horizontal}`;\n      this.style.paddingRight = `${this.borderSize}px`;\n    }\n    if (!disabled && this.allowHeight) {\n      finalClassName = `${finalClassName} ${styles.vertical}`;\n      this.style.paddingBottom = `${this.borderSize}px`;\n    }\n    return (\n      <div\n        ref={this.ref}\n        className={finalClassName}\n        onMouseDown={!disabled ? this.startResize : null}\n        style={this.style}\n      >\n        { children }\n      </div>\n    );\n  }\n}\n\nexport default Border;\n","import React from 'react';\nimport Border from 'app/components/Border';\nimport styles from './Grid.module.scss';\n\nexport default class Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      layout,\n      borderSize\n    } = this.props;\n    this.ref = React.createRef();\n    this.borderSize = borderSize || 10;\n    this.layout = layout;\n    this.columns = layout\n      .reduce((cal, item) => {\n        const newCal = [...cal];\n        const { x } = item;\n        newCal[x] = [...(newCal[x] || []), item];\n        return newCal;\n      }, [])\n      .map(column => column || [])\n      .map(column => column.sort((a, b) => a.y - b.y));\n\n    this.state = {\n      data: this.columns.map((column) => {\n        return column.map((item) => {\n          return {\n            width: item.width,\n            height: item.height\n          };\n        });\n      })\n    };\n  }\n\n  componentDidMount() {\n    const { autoResize } = this.props;\n    if (autoResize) {\n      window.addEventListener('resize', this.onResize);\n      window.dispatchEvent(new Event('resize'));\n    }\n  }\n\n  componentWillUnmount() {\n    const { autoResize } = this.props;\n    if (autoResize) {\n      window.removeEventListener('resize', this.onResize);\n    }\n  }\n\n  onResize = () => {\n    this.updateFullState();\n  }\n\n  updateFullState = () => {\n    const { clientWidth: totalWidth, clientHeight: totalHeight } = this.ref.current;\n    const { data } = this.state;\n    const newData = data.map((column, indexOfColumn) => {\n      return column.map((item, indexOfItem) => {\n        const sumOfWidth = data\n          .slice(0, -1)\n          .map(c => (c[0] || { width: 0 }))\n          .map(c => c.width)\n          .reduce((cal, val) => cal + val, 0);\n        const sumOfHeight = column\n          .slice(0, -1)\n          .map(c => c.height)\n          .reduce((cal, val) => cal + val, 0);\n        return {\n          width: indexOfColumn === data.length - 1 ? totalWidth - sumOfWidth : item.width,\n          height: indexOfItem === column.length - 1 ? totalHeight - sumOfHeight : item.height\n        };\n      });\n    });\n    this.setState({ data: newData });\n  }\n\n  updateGridState = ({\n    indexOfColumn, indexOfItem, width, height\n  }) => {\n    const { clientWidth: totalWidth, clientHeight: totalHeight } = this.ref.current;\n    const { data } = this.state;\n    const newData = [...data];\n    if (width !== newData[indexOfColumn][0].width) {\n      newData[indexOfColumn] = newData[indexOfColumn]\n        .map((item) => {\n          return {\n            ...item,\n            width\n          };\n        });\n      newData[newData.length - 1] = newData[newData.length - 1].map((item) => {\n        return {\n          ...item,\n          width: totalWidth - width\n        };\n      });\n    } else if (height !== undefined && indexOfColumn !== undefined && indexOfItem !== undefined) {\n      newData[indexOfColumn][indexOfItem].height = height;\n      newData[indexOfColumn][newData[indexOfColumn].length - 1].height = totalHeight - newData[indexOfColumn][indexOfItem].height;\n    }\n    this.setState({ data: newData });\n  }\n\n  render() {\n    const { columns } = this;\n    const { children, totalWidth, totalHeight } = this.props;\n    const { data } = this.state;\n    return (\n      <div\n        className={styles.grid}\n        style={{\n          width: totalWidth,\n          height: totalHeight\n        }}\n        ref={this.ref}\n      >\n        {\n          columns.map((column, indexOfColumn) => {\n            const maxWidth = Math.max(...column.map(item => item.maxWidth || 0));\n            const minWidth = Math.min(...column.map(item => item.minWidth || 999999));\n            const isDisabledForWidth = indexOfColumn === columns.length - 1;\n            const finalWidth = isDisabledForWidth\n              ? data[indexOfColumn][0].width\n              : data[indexOfColumn][0].width + this.borderSize;\n            return (\n              <Border\n                allowWidth\n                borderSize={this.borderSize}\n                width={finalWidth}\n                maxWidth={maxWidth}\n                minWidth={minWidth}\n                onUpdate={({ width: w }) => this.updateGridState({\n                  indexOfColumn,\n                  width: w\n                })}\n                disabled={indexOfColumn === columns.length - 1}\n                key={JSON.stringify(column)}\n              >\n                {\n                  column.map((item, indexOfItem) => {\n                    const itemInData = data[indexOfColumn][indexOfItem];\n                    const itemInColumns = columns[indexOfColumn][indexOfItem];\n                    const isDisabled = indexOfItem === column.length - 1 || itemInColumns.static;\n                    return (\n                      <Border\n                        allowHeight\n                        borderSize={this.borderSize}\n                        width={itemInData.width}\n                        height={itemInData.height}\n                        maxHeight={itemInColumns.maxHeight}\n                        minHeight={itemInColumns.minHeight}\n                        onUpdate={({ width: w, height: h }) => this.updateGridState({\n                          indexOfItem,\n                          indexOfColumn,\n                          width: w,\n                          height: h\n                        })}\n                        disabled={isDisabled}\n                        key={JSON.stringify(item)}\n                      >\n                        { children.find(({ key }) => key === item.key) }\n                      </Border>\n                    );\n                  })\n                }\n              </Border>\n            );\n          })\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport styles from './Grid.module.scss';\n\nconst GridItem = ({ children }) => (\n  <div className={styles.item}>\n    { children }\n  </div>\n);\n\nexport default GridItem;\n","import React from 'react';\nimport AceEditor from 'react-ace';\n\nimport styles from './CodeWidget.module.scss';\n\nconst CodeWidget = ({\n  handleCodeChange,\n  data,\n  mode,\n  theme\n}) => (\n  <AceEditor\n    className={styles.code}\n    showPrintMargin={false}\n    mode={mode}\n    theme={theme}\n    onChange={handleCodeChange}\n    value={data}\n    tabSize={2}\n    debounceChangePeriod={800}\n  />\n);\n\nexport default CodeWidget;\n","import React from 'react';\nimport styles from './ResultWidget.module.scss';\n\nconst ResultWidget = () => (\n  <div className={styles.result} id=\"result\" />\n);\n\nexport default ResultWidget;\n","import React from 'react';\nimport styles from './AnswerWidget.module.scss';\n\nconst AnswerWidget = () => (\n  <div id=\"answer\" className={styles.answer} />\n);\n\nexport default AnswerWidget;\n","const spy = (obj, methodName) => {\n  const origFn = obj[methodName];\n  let callHistory = [];\n  let calledWith = {};\n\n  const secret = Math.random().toFixed(4) + '';\n  obj[methodName] = (...args) => {\n    const result = origFn.apply(obj, args);\n    callHistory.push(args);\n    calledWith[args.join(secret)] = true;\n    return result;\n  };\n  return {\n    calledWith: (...args) => !!calledWith[args.join(secret)],\n    callCount: () => callHistory.length,\n    restore: () => (obj[methodName] = origFn)\n  };\n};\n\nexport default spy;\n","import { createHarness } from 'tape';\n\nconst tryCatchPatch = t => (description, testBlock) => {\n  try {\n    t.comment(description);\n    testBlock(t);\n  } catch (e) {\n    t.fail(e);\n  }\n};\n\nconst combinePatch = (tape, patches) => (...args) => {\n  const [cb] = args.slice(-1);\n  if (typeof cb !== 'function') {\n    throw new Error('should provide callback');\n  }\n  tape(...args.slice(0, -1), (t) => {\n    for (let key in patches) {\n      t[key] = patches[key](t);\n    }\n    try {\n      cb(t);\n    } catch (e) {\n      t.fail(e);\n    }\n  });\n};\n\nconst getPatchedTape = (onUpdate) => {\n  const harness = createHarness();\n  const stream = harness.createStream({ objectMode: true });\n  stream.on('data', onUpdate);\n  return combinePatch(harness, {\n    subtest: tryCatchPatch,\n    should: tryCatchPatch\n  });\n};\n\nexport default getPatchedTape ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { renderToString } from 'react-dom/server';\nimport sinon from 'sinon';\nimport vm from 'vm';\nimport spy from './spy';\nimport getPatchedTape from './tape';\n\nconst wrapCode = (code = '') => {\n  return code.replace(/for *\\(.*\\{|while *\\(.*\\{|do *\\{/g, (loopHead) => {\n    return `let count = 0;\n      const detector = (c) => {\n        if (c > 100000) {\n          throw new Error('infinite');\n        }\n      }\n      ${loopHead}\n      detector(count++);\n    `;\n  });\n};\n\nconst runCode = ({ code, wrappedConsole = console, onTapeUpdate }) => {\n  let script = null;\n  let context = null;\n  const clock = sinon.useFakeTimers();\n  let test = null;\n  if (onTapeUpdate) {\n    test = getPatchedTape(onTapeUpdate);\n  }\n  // should hijack setTimeout before pass to sandbox\n  const sandbox = {\n    setTimeout: window.setTimeout, // need to be passed also...\n    console: wrappedConsole,\n    sinon,\n    describe: test,\n    test,\n    clock,\n    spy,\n    React,\n    ReactDOM,\n    root: document.getElementById('result'),\n    answer: document.getElementById('answer'),\n    renderToString\n  };\n  try {\n    script = new vm.Script(wrapCode(code));\n    // eslint-disable-next-line\n    context = new vm.createContext(sandbox);\n    script.runInContext(context);\n  } catch (e) {\n    script = new vm.Script(wrapCode(''));\n    // eslint-disable-next-line\n    context = new vm.createContext(sandbox);\n    script.runInContext(context);\n    wrappedConsole.log(e);\n  }\n  clock.restore();\n};\n\n// const debouncedRunCode = _.debounce(runCode, 200);\n\nexport default runCode;\n","import javascript from './javascript';\nimport react from './react';\n\nconst Questions = {\n  javascript,\n  react\n};\n\nconst getCategories = () => Object.keys(Questions).map((name) => { return { name }; });\n\nconst getQuestions = type => Questions[type];\n\nexport {\n  getCategories,\n  getQuestions\n};\n","const questionList = [\n  {\n    name: 'countChar',\n    content: `\n/**\n * Implement the function 'countChar'\n * to count the occurance of each character for the input string,\n * and return an object containing those information.\n *\n * For example :\n *  input string: 'abca'\n *\n *  returned object:\n *  {\n *     a: 2,\n *     b: 1,\n *     c: 1\n *  }\n */\n\n/**\n * Implement function body\n */\nfunction countChar(s) {\n\n}\n\n`,\n    test: `\ntest('countChar test', (t) => {\n  t.subtest('should return character count in an object', t => {\n    const result = countChar();\n    t.equal(typeof result, 'object');\n  });\n  t.subtest('should be able to count chars', t => {\n    const input = 'abca';\n    const result = countChar(input);\n    t.equal(result.a, 2);\n    t.equal(result.b, 1);\n  });\n  t.subtest('should be able count some longer string as well', t => {\n    const input = 'The Quick Brown Fox Jumps Over The Lazy Dog';\n    const result = countChar(input);\n    t.equal(result[' '], 8);\n    t.equal(result.T, 2);\n    t.equal(result.o, 3);\n  });\n})\n\n`\n  },\n  {\n    name: 'forEach, map and reduce',\n    content: `\n/**\n * Implement the function 'forEach, map and reduce'\n *\n */\n\n/**\n * Implement function body\n */\nconst myForEach = function (array, callback) {\n\n}\n\nconst myMap = function (array, callback) {\n\n}\n\nconst myReduce = function (array, callback, initValue) {\n\n}\n\n`,\n    test: `\ntest('forEach, map and reduce test', (t) => {\n  t.subtest('should execute forEach correctly', t => {\n    let count = 0;\n    myForEach([1, 2, 3, 4], (val, index) => count += val * index * index);\n    t.equal(count, 50);\n  });\n  t.subtest('should execute map correctly', t => {\n    const result = myMap([1, 2, 3, 4], (val, index) => val * index * index);\n    t.equal(result[0], 0);\n    t.equal(result[2], 12);\n  });\n  t.subtest('should execute reduce correctly', t => {\n    const result = myReduce([10, 2, 3], (cal, val, index) => cal + val * index, 0);\n    t.equal(result, 8);\n  });\n});\n\n`\n  },\n  {\n    name: 'adder',\n    content: `\n/**\n * Implement a function 'adder'\n * which behavior is like the following example\n *\n * ex:\n *   addTen = adder(10)\n *   addFive = adder(5)\n *\n *   addTen(10)  // return 20\n *   addFive(10) // return 15\n*/\n\n/**\n * Implement function body\n */\nfunction adder() {\n}\n\n`,\n    test: `\ntest('adder test', (t) => {\n  t.subtest('should return a function', t => {\n    t.equal(typeof adder(), 'function');\n  });\n  t.subtest('should be able to add two numbers', t => {\n    const add5 = adder(5);\n    t.equal(add5(10), 15);\n    t.equal(add5(20), 25);\n\n    t.equal(adder(40)(2), 42);\n  });\n})\n\n`\n  },\n  {\n    name: 'infinite adder',\n    content: `\n/**\n * Implement a function 'adder'\n * which behavior is like the following example\n *\n * ex:\n *\n *   adder(10)(20)(30).getValue()  // return 60\n *   adder(10)(20)(30)(40).getValue() // return 100\n*/\n\n/**\n * Implement function body\n */\nfunction adder() {\n}\n\n`,\n    test: `\ntest('adder test', (t) => {\n  t.subtest('should return a function', t => {\n    t.equal(typeof adder(), 'function');\n  });\n  t.subtest('should get default value with 0', t => {\n    t.equal(adder().getValue(), 0);\n  });\n  t.subtest('should be able to add mutiple numbers', t => {\n    t.equal(adder(10).getValue(), 10);\n    t.equal(adder(10)(20)(30).getValue(), 60);\n    t.equal(adder(10)(20)(30)(40).getValue(), 100);\n  });\n})\n\n`\n  },\n  {\n    name: 'default function',\n    content: `\n/**\n * Implement a function 'defaultWith'\n * which behavior is like the following example\n *\n * ex:\n *\n *   const fn = ({ a, b }) => a + b;\n *   const boundFn = defaultWith(fn, { a: 10 });\n *   boundFn({ b: 20 }); // return 30\n*/\n\n/**\n * Implement function body\n */\nfunction defaultWith() {\n}\n\n`,\n    test: `\ntest('defaultWith test', (t) => {\n  t.subtest('should return a function', t => {\n    const fn = () => {};\n    t.equal(typeof defaultWith(fn, {}), 'function');\n  });\n  t.subtest('should get correct result when all parameters are given', t => {\n    const fn = ({ a, b }) => a * 2 + b * 3;\n    const boundFn = defaultWith(fn, { a: 3 });\n    t.equal(boundFn({ b: 4 }), 18);\n  });\n  t.subtest('should get correct result when all parameters are given', t => {\n    const fn = ({ x, y, z }) => x * y * z;\n    const boundFn = defaultWith(fn, { x: 3, y: 4 });\n    t.equal(boundFn({ x: 7, z: 2 }), 56);\n  });\n})\n\n`\n  },\n  {\n    name: 'sequential',\n    content: `\n/**\n * Implement the function 'sequential'\n * to execute async functions in sequence.\n *\n * 'sequential' takes an array of async functions as parameter,\n * and execute each of them after previous one has done.\n */\n\n/**\n * Implement function body\n */\nfunction sequential(tasks = []) {\n\n}\n\n`,\n    test: `\nfunction asyncTask1(done) {\n  setTimeout(() => {\n    console.log('task 1 done');\n    done(1);\n  }, 500);\n}\nfunction asyncTask2(done) {\n  setTimeout(() => {\n    console.log('task 2 done');\n    done(2);\n  }, 400);\n}\nfunction asyncTask3(done) {\n  setTimeout(() => {\n    console.log('task 3 done');\n    done(3);\n  }, 300);\n}\n\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\n\ntest('sequential test', (t) => {\n  const log = spy(console, 'log');\n  sequential(tasks);\n  t.equal(log.callCount(), 0);\n  clock.tick(600);\n  t.equal(log.callCount(), 1);\n  t.ok(log.calledWith('task 1 done'));\n  clock.tick(600);\n  t.equal(log.callCount(), 3);\n  t.ok(log.calledWith('task 3 done'));\n});\n\n    `\n  },\n  {\n    name: 'parallel',\n    content: `\n/**\n * Implement the function 'parallel'\n * to execute async functions at once.\n *\n * 'parallel' takes an array of async functions as parameter,\n * and execute each of them in the same time.\n *\n */\n\n/**\n * Implement function body\n */\nfunction parallel(tasks = [], callback) {\n}\n\n`,\n    test: `\nfunction asyncTask1(done) {\n  setTimeout(() => {\n    console.log('task 1 done');\n    done(1);\n  }, 500);\n}\nfunction asyncTask2(done) {\n  setTimeout(() => {\n    console.log('task 2 done');\n    done(2);\n  }, 400);\n}\nfunction asyncTask3(done) {\n  setTimeout(() => {\n    console.log('task 3 done');\n    done(3);\n  }, 300);\n}\n\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\n\ntest('parallel test', t => {\n  t.subtest('should run all tasks at once', t => {\n    const spyLog = spy(console, 'log');\n    parallel(tasks, (result) => { /* do nothing */ });\n    t.equal(spyLog.callCount(), 0);\n    clock.tick(600);\n    t.equal(spyLog.callCount(), 3);\n  });\n\n  t.subtest('should get task result in an array', t => {\n    let obj = {};\n    parallel(tasks, (result) => {\n      obj.result = result;\n    });\n    clock.tick(600);\n    t.deepEqual(obj.result, [1, 2, 3]);\n  });\n\n  t.subtest('should trigger callback only once', t => {\n    let count = 0;\n    const callback = () => count++;\n\n    parallel(tasks, callback);\n    clock.tick(300);\n    t.equal(count, 0);\n    clock.tick(600);\n    t.equal(count, 1);\n  });\n});\n\n`\n  },\n  {\n    name: 'combineReducers',\n    content: `\n// http://redux.js.org/docs/api/combineReducers.html\nfunction combineReducers(reducers) {\n}\n\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nfunction calledCount(state = 0, action) {\n  if(action.type == 'CALL') {\n    return state + 1;\n  }\n  return state;\n}\n\n`,\n    test: `\ntest('combineReducers', t => {\n  const reducer = combineReducers({\n    calc: calc,\n    calls: calledCount,\n  });\n\n  t.subtest('should init states', t => {\n    let state = {};\n    state = reducer(state, {type: ''});\n    t.equal(state.calc, 0);\n    t.equal(state.calls, 0);\n  });\n\n  t.subtest('should handle actions', t => {\n    let state = {};\n    state = reducer(state, {type: 'ADD'});\n    t.equal(state.calc, 1);\n    state = reducer(state, {type: 'ADD'});\n    t.equal(state.calc, 2);\n  });\n})\n`\n  },\n  {\n    name: 'applyMiddleware',\n    content: `\n// http://redux.js.org/docs/api/applyMiddleware.html\n\nfunction applyMiddleware(...middlewares) {\n  return createStore => (...args) => {\n    const store = createStore(...args);\n    let dispatch = store.dispatch;\n    /**************************\n     implement              here\n     **************************/\n\n\n\n\n    /***************************/\n    return Object.assign(store, { dispatch })\n  }\n}\n\n`,\n    test: `\n\nfunction createStore(reducer, preloadedState, enhancer) {\n\n  if (typeof enhancer !== 'undefined') {\n    return enhancer(createStore)(reducer, preloadedState)\n  }\n\n  let currentReducer = reducer;\n  let currentState = preloadedState;\n\n  function getState() {\n    return currentState;\n  }\n\n  function dispatch(action) {\n    currentState = currentReducer(currentState, action);\n  }\n\n  dispatch({ type: '@@INIT' });\n\n  return {\n    dispatch,\n    getState\n  };\n}\n\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst thunk = ({ getState, dispatch }) => next => action => {\n  if (typeof action === 'function') {\n    return action(dispatch, getState);\n  }\n  return next(action);\n}\n\ntest('applyMiddleware test', t => {\n\n  t.subtest('should execute normal action', t => {\n    const store = createStore(calc, 0, applyMiddleware(thunk));\n    store.dispatch({ type: 'ADD' });\n    t.equal(store.getState(), 1);\n  });\n\n  t.subtest('should execute function action', t => {\n    const store = createStore(calc, 0, applyMiddleware(thunk));\n    const incrementAsync = (dispatch, getState) => {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' });\n      }, 1000);\n    };\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    t.equal(store.getState(), 0);\n    clock.tick(1000);\n    t.equal(store.getState(), 5);\n  });\n\n  t.subtest('should apply mutiple middlewares in the right order', t => {\n    let logCount = 1;\n    const log = () => next => action => {\n      logCount += 1;\n      next(action);\n    }\n    const log2 = () => next => action => {\n      logCount *= 2;\n      next(action);\n    }\n    const store = createStore(calc, 0, applyMiddleware(log, log2));\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    t.equal(logCount, 22);\n  });\n})\n`\n  },\n  {\n    name: 'createStore',\n    content: `\n// http://redux.js.org/docs/api/createStore.html\n\nfunction createStore(reducer, preloadedState, enhancer) {\n\n  function getState() {\n\n  }\n\n  function subscribe(listener) {\n\n  }\n\n  function dispatch(action) {\n\n  }\n\n  dispatch({ type: '@@INIT' })\n\n  return {\n    dispatch,\n    subscribe,\n    getState\n  }\n}\n\n\n`,\n    test: `\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst wrappedThunk = (createStore) => {\n  return function (...args) {\n    const store = createStore(...args);\n    const { dispatch, getState } = store;\n    store.dispatch = (action) => {\n      if (typeof action === 'function') {\n        return action(dispatch, getState);\n      }\n      dispatch(action);\n    }\n    return store;\n  }\n}\n\ntest('createStore test', t => {\n\n  t.subtest('should execute getState successfully', t => {\n    const store = createStore(calc, 0);\n    t.equal(store.getState(), 0);\n  });\n\n  t.subtest('should execute dispatch successfully', t => {\n    const store = createStore(calc, 0);\n    t.equal(store.getState(), 0);\n    store.dispatch({ type: 'ADD' });\n    t.equal(store.getState(), 1);\n  });\n\n  t.subtest('should execute subscribe and unsubscribe successfully', t => {\n    const store = createStore(calc, 0);\n    let dispatchCount = 1;\n    let dispatchCount2 = 3;\n    const unsubscribeForCount = store.subscribe(() => dispatchCount *= 2);\n    const unsubscribeForCount2 = store.subscribe(() => dispatchCount2 *= 2);\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    t.equal(dispatchCount, 8);\n    t.equal(dispatchCount2, 24);\n    unsubscribeForCount();\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    unsubscribeForCount2();\n    store.dispatch({ type: 'ADD' });\n    t.equal(dispatchCount, 8);\n    t.equal(dispatchCount2, 96);\n  });\n\n  t.subtest('should execute enhancer successfully', t => {\n    const store = createStore(calc, 0, wrappedThunk);\n    const incrementAsync = (dispatch, getState) => {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' });\n      }, 1000);\n    };\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    t.equal(store.getState(), 0);\n    clock.tick(1000);\n    t.equal(store.getState(), 5);\n  });\n})\n`\n  },\n  {\n    name: 'explain',\n    content: `\n// explain the purpose of following code;\n// modify variable name and/or code style when appropriate;\n// add comments where you see fit\nfunction foo(a, b) {\n  var c = [];\n  for(var i0 = 0, i1 = 0; i0 < a.length && i1 < b.length; ) {\n    if(a[i0] < b[i1]) {\n      c.push(a[i0++]);\n    }\n    if(a[i0] >= b[i1]) {\n      c.push(b[i1++]);\n    }\n  }\n  if(i0 < a.length) {\n    for(var i = i0; i < a.length; i++) {\n      c.push(a[i]);\n    }\n  }\n  if(i1 < b.length) {\n    for(var i = i1; i < b.length; i++) {\n      c.push(b[i]);\n    }\n  }\n  return c;\n}\n\nconsole.log(foo([1,4,5], [2,3,6]))\n`\n  },\n  {\n    name: 'mergeSort',\n    content: `\n// implement function merge, so mergeSort can run correctly\nfunction merge(arr1, arr2) {\n  // TODO enter your code here\n  return arr1;\n}\n\nfunction mergeSort(arr) {\n  if(arr.length <= 1) {\n    return arr;\n  }\n  const mid = Math.floor(arr.length / 2);\n  const sortedArr1 = mergeSort(arr.slice(0, mid));\n  const sortedArr2 = mergeSort(arr.slice(mid));\n  return merge(sortedArr1, sortedArr2);\n}\n\n`,\n    test: `\ntest('mergeSort', t => {\n  t.deepEqual(mergeSort([6,3,5,10,2,100,4,1]),[1,2,3,4,5,6,10,100]);\n  const randomNumbers = Array.from({length: 20})\n    .map(() => Math.floor(Math.random() * 100));\n  const sorted = randomNumbers.slice(0).sort((a, b) => a - b);\n  t.deepEqual(mergeSort(randomNumbers), sorted);\n})\n`\n  },\n];\n\nexport default questionList;\n","const questionList = [\n  {\n    name: 'Search',\n    content: `\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n      </div>\n    );\n  }\n}\n\nconst search = (query) => new Promise((resolve, reject) => {\n  const result = DATA.filter(({ name }) => name.includes(query.toLowerCase()));\n  if (result.length !== 0) {\n    resolve(result);\n  } else {\n    reject(new Error('not found'));\n  }\n});\n\nconst Item = ({ name, price }) => (\n  <div>\n    { name }: { price }$ \n  </div>\n);\n\nconst DATA = [\n  {\n    name: 'apple',\n    price: 10,\n    id: 1\n  },\n  {\n    name: 'orange',\n    price: 15,\n    id: 2\n  },\n  {\n    name: 'banana',\n    price: 7,\n    id: 3\n  },\n]\n\n`,\n    test: `\nclass AnswerApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '', data: [] };\n  }\n  changeValue = async (name) => {\n    this.setState({ value: name });\n    if (name.trim() === '') {\n      this.setState({ data: [] });\n      return;\n    }\n    try {\n      const result = await search(name);\n      this.setState({ data: result });\n    } catch (e) {\n      this.setState({ data: [] });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div>Hi, I want to buy { this.state.value }</div>\n        <input onChange={e => this.changeValue(e.target.value)}/>\n        <div>\n          {\n            this.state.data.map(({ price, name, id }) => <Item price={price} name={name} key={id} /> )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <AnswerApp />,\n  answer\n);\n\ntry {\n  renderToString(\n    <App />\n  );\n  ReactDOM.render(\n    <App/>,\n    root\n  )\n} catch (e) {\n  console.log(e)\n}\n\n`\n  },\n];\n\nexport default questionList;\n","import React from 'react';\nimport { Select } from 'antd';\n\nimport { getCategories } from 'app/questions/index';\n\nconst categories = getCategories();\nconst { Option } = Select;\n\nconst CategorySelector = ({ index, onChange }) => (\n  <Select\n    onChange={onChange}\n    defaultValue={index}\n    style={{ minWidth: 200 }}\n  >\n    { categories.map((q, i) => <Option key={q.name} value={i}>{q.name}</Option>)}\n  </Select>\n);\n\nexport default CategorySelector;\n","import React from 'react';\nimport CategorySelector from 'app/components/Selectors/CategorySelector';\n\nimport { Button, Input } from 'antd';\nimport styles from './ControlWidget.module.scss';\n\n\nconst ControlWidget = ({\n  index,\n  onChangeName,\n  onSubmit,\n  onChangeCategory\n}) => (\n  <div className={styles.control}>\n    <CategorySelector onChange={onChangeCategory} index={index} />\n    <Input\n      placeholder=\"Question name\"\n      onChange={e => onChangeName(e.target.value)}\n      style={{ width: 200, marginRight: 5 }}\n    />\n    <Button\n      type=\"danger\"\n      onClick={onSubmit}\n    >\n      Submit\n    </Button>\n  </div>\n);\n\nexport default ControlWidget;\n","import React, { Component } from 'react';\nimport { Tag, Input, Tooltip, Icon } from 'antd';\n\nimport styles from './TagWidget.module.scss';\n\nclass TagWidget extends Component {\n  state = {\n    inputVisible: false,\n    inputValue: '',\n  };\n\n  handleClose = (removedTag) => {\n    const { data: tags, onTagUpdate } = this.props;\n    onTagUpdate(tags.filter(tag => tag !== removedTag));\n  }\n\n  showInput = () => {\n    this.setState({ inputVisible: true }, () => this.input.focus());\n  }\n\n  handleInputChange = (e) => {\n    this.setState({ inputValue: e.target.value });\n  }\n\n  handleInputConfirm = () => {\n    const { onTagUpdate, data: tags } = this.props;\n    const { inputValue } = this.state;\n    let newTags = [...tags];\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      newTags = [...newTags, inputValue];\n    }\n    onTagUpdate(newTags);\n    this.setState({ inputValue: '', inputVisible: false });\n  }\n\n  saveInputRef = input => this.input = input\n\n  render() {\n    const { inputVisible, inputValue } = this.state;\n    const { data: tags } = this.props;\n    return (\n      <div className={styles['tag-widget']}>\n        {tags.map((tag, index) => {\n          const isLongTag = tag.length > 20;\n          const tagElem = (\n            <Tag key={tag} closable afterClose={() => this.handleClose(tag)}>\n              {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n            </Tag>\n          );\n          return isLongTag ? <Tooltip title={tag} key={tag}>{tagElem}</Tooltip> : tagElem;\n        })}\n        {inputVisible && (\n          <Input\n            ref={this.saveInputRef}\n            type=\"text\"\n            size=\"small\"\n            style={{ width: 78 }}\n            value={inputValue}\n            onChange={this.handleInputChange}\n            onBlur={this.handleInputConfirm}\n            onPressEnter={this.handleInputConfirm}\n          />\n        )}\n        {!inputVisible && (\n          <Tag\n            onClick={this.showInput}\n            style={{ background: '#fff', borderStyle: 'dashed' }}\n          >\n            <Icon type=\"plus\" />\n            New Tag\n          </Tag>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default TagWidget;","import React, { Component } from 'react';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport { Spin } from 'antd';\n\nimport { transform } from '@babel/standalone';\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport ResultWidget from 'app/components/Widgets/ResultWidget';\nimport AnswerWidget from 'app/components/Widgets/AnswerWidget';\n\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport ControlWidget from '../ControlWidget';\nimport TagWidget from '../../TagWidget';\nimport styles from './ReactPage.module.scss';\n\n\nclass ReactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n    this.state = {\n      code: '',\n      compiledCode: '',\n      test: '',\n      name: '',\n      tags: [],\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    const { compiledCode } = this.state;\n    debouncedRunCode({ code: compiledCode });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { compiledCode: previousCompiledCode } = this.state;\n    const { compiledCode } = nextState;\n    if (previousCompiledCode !== compiledCode) {\n      // this.setState({ tape: [] }, () => {\n      debouncedRunCode({ code: compiledCode });\n      // });\n    }\n    return true;\n  }\n\n  onCodeChange = () => {\n    const { code, test } = this.state;\n    const fullCode = `${code} ${test}`;\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  onTagUpdate = (tags) => {\n    this.setState({ tags });\n  }\n\n  onSubmit = async () => {\n    const {\n      tags,\n      name,\n      code,\n      test\n    } = this.state;\n    const { onSubmit } = this.props;\n    this.setState({ isLoading: true });\n    await onSubmit({\n      tags,\n      name,\n      code,\n      test,\n      type: 'react'\n    });\n    this.setState({ isLoading: false });\n  }\n\n  render() {\n    const {\n      test,\n      code,\n      tags,\n      isLoading\n    } = this.state;\n    const { onChangeCategory, index } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'result', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2 - 100, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'answer', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2 - 100, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'tag', x: 1, y: 3, width: window.innerWidth / 2, height: 200, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>     \n        <Spin spinning={isLoading} size=\"large\">\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n            <GridItem key=\"code\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ code: newCode }, this.onCodeChange);\n                }}\n                data={code}\n                mode=\"jsx\"\n                theme=\"monokai\"\n              />\n            </GridItem>\n            <GridItem key=\"test\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ test: newCode }, this.onCodeChange);\n                }}\n                data={test}\n                mode=\"jsx\"\n                theme=\"textmate\"\n              />\n            </GridItem>\n            <GridItem key=\"answer\">\n              <AnswerWidget />\n            </GridItem>\n            <GridItem key=\"control\">\n              <ControlWidget\n                onChangeName={(name) => { this.setState({ name })}}\n                onSubmit={this.onSubmit}\n                type=\"react\"\n                onChangeCategory={onChangeCategory}\n                index={index}\n              />\n            </GridItem>\n            <GridItem key=\"result\">\n              <ResultWidget />\n            </GridItem>\n            <GridItem key=\"tag\">\n              <TagWidget data={tags} onTagUpdate={this.onTagUpdate} />\n            </GridItem>\n          </Grid>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default ReactPage;\n","import React from 'react';\nimport AceEditor from 'react-ace';\nimport styles from './TestWidget.module.scss';\n\nconst TestWidget = ({ data, readOnly = true, handleCodeChange = () => {} }) => (\n  <div\n    className={`${styles['test-widget']}`}\n  >\n    <AceEditor\n      showPrintMargin={false}\n      mode=\"javascript\"\n      theme=\"textmate\"\n      value={data}\n      readOnly={readOnly}\n      tabSize={2}\n      onChange={handleCodeChange}\n    />\n  </div>\n);\n\nexport default TestWidget;\n","import React from 'react';\nimport styles from './TapeWidget.module.scss';\n\nconst TestRow = row => (\n  <div className={styles.test}>\n    { row.name }\n  </div>\n);\n\nconst AssertRow = (row) => {\n  const actual = typeof row.actual === 'object' ? JSON.stringify(row.actual) : `${row.actual}`;\n  const expected = typeof row.expected === 'object' ? JSON.stringify(row.expected) : `${row.expected}`;\n  return (\n    <div className={`${styles.assert} ${row.ok ? styles.ok : styles.fail}`}>\n      <div className={row.ok ? styles.ok : styles.fail}>{row.ok ? 'OK' : 'FAIL'}</div>\n      { row.name ? <div className={styles.name}>{ `${row.name}` }</div> : null }\n      {\n        !row.ok\n          ? (\n            <>\n              <div className={styles.actual}>{ actual }</div>\n              <div className={styles['not-equal']}>!=</div>\n              <div className={styles.expected}>{ expected }</div>\n              {\n                typeof row.actual === 'string' && typeof row.expected === 'string'\n                  ? (\n                    <div className={styles.diff}>\n                      <span className={styles.expected}>{ expected }</span>\n                      <span className={styles.actual}>{ actual }</span>\n                    </div>\n                  )\n                  : null\n              }\n            </>\n          )\n          : null\n      }\n    </div>\n  );\n};\n\n// TODO: add endrow component\nconst EndRow = row => (\n  <div>\n    { JSON.stringify(row) }\n  </div>\n);\n\nconst DescriptionRow = ({ description }) => (\n  <div className={styles.description}>\n    { description }\n  </div>\n);\n\nconst getRow = (row) => {\n  switch (row.type) {\n    case 'test':\n      return <TestRow key={JSON.stringify(row)} {...row} />;\n    case 'assert':\n      return <AssertRow key={JSON.stringify(row)} {...row} />;\n    case 'end':\n      return <EndRow key={JSON.stringify(row)} {...row} />;\n    case undefined && typeof row === 'string':\n      return <DescriptionRow description={row} key={row} />;\n    default:\n      return null;\n  }\n};\n\nconst TapeWidget = ({ data }) => (\n  <div className={styles.tape}>{ data.map(getRow) }</div>\n);\n\nexport default TapeWidget;\n","import React, { Component } from 'react';\nimport 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport { Spin } from 'antd';\n\nimport { transform } from '@babel/standalone';\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport TestWidget from 'app/components/Widgets/TestWidget';\nimport TapeWidget from 'app/components/Widgets/TapeWidget';\n\nimport { changeCategory } from 'app/actions/category';\n\nimport { getCategories } from 'app/questions/index';\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport ControlWidget from '../ControlWidget';\nimport TagWidget from '../../TagWidget';\nimport styles from './JavaScriptPage.module.scss';\n\n\nclass JavaScriptPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n    this.state = {\n      code: '',\n      compiledCode: '',\n      test: '',\n      tape: [],\n      name: '',\n      tags: [],\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    const { compiledCode } = this.state;\n    const { actions } = this.props;\n    debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { compiledCode: previousCompiledCode } = this.state;\n    const { compiledCode } = nextState;\n    if (previousCompiledCode !== compiledCode) {\n      this.setState({ tape: [] }, () => {\n        debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n      });\n    }\n    return true;\n  }\n\n  addTape = (data) => {\n    const { tape } = this.state;\n    this.setState({\n      tape: [...tape, data]\n    });\n  }\n\n  onTagUpdate = (tags) => {\n    this.setState({ tags });\n  }\n\n  onCodeChange = () => {\n    const { code, test } = this.state;\n    const fullCode = `${code} ${test}`;\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  onSubmit = async () => {\n    const {\n      tags,\n      name,\n      code,\n      test\n    } = this.state;\n    const { onSubmit } = this.props;\n    this.setState({ isLoading: true });\n    await onSubmit({\n      tags,\n      name,\n      code,\n      test,\n      type: 'javascript'\n    });\n    this.setState({ isLoading: false });\n  }\n\n  render() {\n    const {\n      test,\n      code,\n      tape,\n      tags,\n      isLoading\n    } = this.state;\n    const { onChangeCategory, index } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'tape', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'tag', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>\n        <Spin spinning={isLoading} size=\"large\">\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n            <GridItem key=\"code\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ code: newCode }, this.onCodeChange);\n                }}\n                data={code}\n                mode=\"javascript\"\n                theme=\"monokai\"\n              />\n            </GridItem>\n            <GridItem key=\"test\">\n              <TestWidget\n                handleCodeChange={(newTest) => {\n                  this.setState({ test: newTest }, this.onCodeChange);\n                }}\n                data={test}\n                readOnly={false}\n              />\n            </GridItem>\n            <GridItem key=\"control\">\n              <ControlWidget\n                type=\"javascript\"\n                onChangeName={(name) => { this.setState({ name })}}\n                onSubmit={this.onSubmit}\n                onChangeCategory={onChangeCategory}\n                index={index}\n              />\n            </GridItem>\n            <GridItem key=\"tape\">\n              <TapeWidget data={tape} />\n            </GridItem>\n            <GridItem key=\"tag\">\n              <TagWidget data={tags} onTagUpdate={this.onTagUpdate} />\n            </GridItem>\n          </Grid>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default JavaScriptPage;\n","import React, { Component } from 'react';\n\nimport { createQuestion } from 'app/utils/question';\n\nimport ReactPage from './ReactPage';\nimport JavaScriptPage from './JavaScriptPage';\n\nconst getPageComponent = (args) => {\n  switch (args.index) {\n    case 1: {\n      return <ReactPage {...args} />;\n    }\n    default: {\n      return <JavaScriptPage {...args} />;\n    }\n  }\n};\n\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { category: 0 };\n  }\n\n  componentDidMount() {\n    const { state, history } = this.props;\n    // if (!state.login.isLogin) {\n    //   history.push('/login');\n    //   return;\n    // }\n  }\n\n  onChangeCategory = (index) => {\n    this.setState({ category: index });\n  }\n\n  onSubmit = async (data) => {\n    try {\n      await createQuestion(data);\n    } catch (e) {\n      alert(e.message);\n    }\n  }\n\n  render() {\n    const { category } = this.state;\n    return (\n      <React.Fragment>\n        { getPageComponent({ index: category, onSubmit: this.onSubmit, onChangeCategory: this.onChangeCategory }) }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Page;\n","import React from 'react';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\n// const QuestionSelector = ({ actions, state }) => {\n//   const {\n//     questionIndex,\n//     type,\n//     questions\n//   } = getStateInformation(state);\n//   return (\n//     <Select\n//       onChange={index => actions.changeQuestion({ index, type: type.toUpperCase() })}\n//       defaultValue={questionIndex}\n//       style={{ minWidth: 200 }}\n//     >\n//       { questions.map((q, i) => <Option key={q.name} value={i}>{q.name}</Option>)}\n//     </Select>\n//   );\n// };\n\nconst QuestionSelector = ({ index, onChange, list }) => (\n  <Select\n    onChange={onChange}\n    defaultValue={index}\n    style={{ minWidth: 200 }}\n  >\n    { list.map((q, i) => <Option key={q.id} value={i}>{q.name}</Option>)}\n  </Select>\n);\n\nexport default QuestionSelector;\n","import React from 'react';\nimport CategorySelector from 'app/components/Selectors/CategorySelector';\nimport QuestionSelector from 'app/components/Selectors/QuestionSelector';\n\nimport { Button } from 'antd';\nimport styles from './ControlWidget.module.scss';\n\n\nconst ControlWidget = ({\n  categoryIndex,\n  questionIndex,\n  onSubmit,\n  onChangeCategory,\n  onChangeQuestion,\n  questionList\n}) => (\n  <div className={styles.control}>\n    <CategorySelector onChange={onChangeCategory} index={categoryIndex} />\n    <QuestionSelector onChange={onChangeQuestion} index={questionIndex} list={questionList} />\n    <Button\n      type=\"danger\"\n      onClick={onSubmit}\n    >\n      Submit\n    </Button>\n  </div>\n);\n\nexport default ControlWidget;\n","import React, { Component } from 'react';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport { Spin } from 'antd';\n\nimport { transform } from '@babel/standalone';\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport ResultWidget from 'app/components/Widgets/ResultWidget';\nimport AnswerWidget from 'app/components/Widgets/AnswerWidget';\n\nimport { listQuestions, getQuestion } from 'app/utils/question';\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport ControlWidget from '../ControlWidget';\nimport TagWidget from '../../TagWidget';\nimport styles from './ReactPage.module.scss';\n\n\nclass ReactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n    this.state = {\n      code: '',\n      compiledCode: '',\n      test: '',\n      name: '',\n      tags: [],\n      index: 0,\n      questionList: [],\n      isLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    const { compiledCode } = this.state;\n    this.setState({ isLoading: true });\n    const result = await listQuestions('react');\n    this.setState({ questionList: result.data.listQuestions.items, isLoading: false });\n    debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { compiledCode: previousCompiledCode } = this.state;\n    const { compiledCode } = nextState;\n    if (previousCompiledCode !== compiledCode) {\n      // this.setState({ tape: [] }, () => {\n      debouncedRunCode({ code: compiledCode });\n      // });\n    }\n    return true;\n  }\n\n  onCodeChange = () => {\n    const { code, test } = this.state;\n    const fullCode = `${code} ${test}`;\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  onTagUpdate = (tags) => {\n    this.setState({ tags });\n  }\n\n  onSubmit = async () => {\n    const {\n      tags,\n      code,\n      test,\n      id\n    } = this.state;\n    const { onSubmit } = this.props;\n    this.setState({ isLoading: true });\n    await onSubmit({\n      id,\n      tags,\n      code,\n      test\n    });\n    this.setState({ isLoading: false });\n  }\n\n  onChangeQuestion = async (index) => {\n    const { questionList } = this.state;\n    const { id } = questionList[index];\n    this.setState({ isLoading: true, index });\n    const result = await getQuestion({ id });\n    const { tags, content: code, test } = result.data.getQuestion;\n    this.setState({\n      tags,\n      code,\n      test,\n      isLoading: false,\n      id\n    });\n  }\n\n  render() {\n    const {\n      test,\n      code,\n      tags,\n      isLoading,\n      questionList,\n      index\n    } = this.state;\n    const { onChangeCategory, categoryIndex } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'result', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2 - 100, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'answer', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2 - 100, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'tag', x: 1, y: 3, width: window.innerWidth / 2, height: 200, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>    \n        <Spin spinning={isLoading} size=\"large\">\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n            <GridItem key=\"code\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ code: newCode }, this.onCodeChange);\n                }}\n                data={code}\n                mode=\"jsx\"\n                theme=\"monokai\"\n              />\n            </GridItem>\n            <GridItem key=\"test\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ test: newCode }, this.onCodeChange);\n                }}\n                data={test}\n                mode=\"jsx\"\n                theme=\"textmate\"\n              />\n            </GridItem>\n            <GridItem key=\"answer\">\n              <AnswerWidget />\n            </GridItem>\n            <GridItem key=\"control\">\n              <ControlWidget\n                type=\"react\"\n                onChangeName={name => this.setState({ name })}\n                onSubmit={this.onSubmit}\n                onChangeCategory={onChangeCategory}\n                categoryIndex={categoryIndex}\n                questionIndex={index}\n                questionList={questionList}\n                onChangeQuestion={this.onChangeQuestion}\n              />\n            </GridItem>\n            <GridItem key=\"result\">\n              <ResultWidget />\n            </GridItem>\n            <GridItem key=\"tag\">\n              <TagWidget data={tags} onTagUpdate={this.onTagUpdate}/>\n            </GridItem>\n          </Grid>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default ReactPage;\n","import React, { Component } from 'react';\nimport 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport { Spin } from 'antd';\n\nimport { transform } from '@babel/standalone';\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport TestWidget from 'app/components/Widgets/TestWidget';\nimport TapeWidget from 'app/components/Widgets/TapeWidget';\n\nimport { changeCategory } from 'app/actions/category';\n\nimport { getCategories } from 'app/questions/index';\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport { listQuestions, getQuestion } from 'app/utils/question';\n\nimport ControlWidget from '../ControlWidget';\nimport TagWidget from '../../TagWidget';\nimport styles from './JavaScriptPage.module.scss';\n\n\nclass JavaScriptPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n    this.state = {\n      code: '',\n      compiledCode: '',\n      test: '',\n      tape: [],\n      tags: [],\n      id: null,\n      questionList: [],\n      isLoading: false,\n      index: 0\n    };\n  }\n\n  async componentDidMount() {\n    const { compiledCode } = this.state;\n    this.setState({ isLoading: true });\n    const result = await listQuestions('javascript');\n    this.setState({ questionList: result.data.listQuestions.items, isLoading: false });\n    debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { compiledCode: previousCompiledCode } = this.state;\n    const { compiledCode } = nextState;\n    if (previousCompiledCode !== compiledCode) {\n      this.setState({ tape: [] }, () => {\n        debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n      });\n    }\n    return true;\n  }\n\n  addTape = (data) => {\n    const { tape } = this.state;\n    this.setState({\n      tape: [...tape, data]\n    });\n  }\n\n  onTagUpdate = (tags) => {\n    this.setState({ tags });\n  }\n\n  onCodeChange = () => {\n    const { code, test } = this.state;\n    const fullCode = `${code} ${test}`;\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  onSubmit = async () => {\n    const {\n      tags,\n      code,\n      test,\n      id\n    } = this.state;\n    const { onSubmit } = this.props;\n    this.setState({ isLoading: true });\n    await onSubmit({\n      id,\n      tags,\n      code,\n      test\n    });\n    this.setState({ isLoading: false });\n  }\n\n  onChangeQuestion = async (index) => {\n    const { questionList } = this.state;\n    const { id } = questionList[index];\n    this.setState({ isLoading: true, index });\n    const result = await getQuestion({ id });\n    const { tags, content: code, test } = result.data.getQuestion;\n    this.setState({\n      tags,\n      code,\n      test,\n      isLoading: false,\n      id\n    });\n  }\n\n  render() {\n    const {\n      test,\n      code,\n      tape,\n      tags,\n      questionList,\n      isLoading,\n      index\n    } = this.state;\n    const { onChangeCategory, categoryIndex } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'tape', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'tag', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>\n        <Spin spinning={isLoading} size=\"large\">\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n            <GridItem key=\"code\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ code: newCode }, this.onCodeChange);\n                }}\n                data={code}\n                mode=\"javascript\"\n                theme=\"monokai\"\n              />\n            </GridItem>\n            <GridItem key=\"test\">\n              <TestWidget\n                handleCodeChange={(newTest) => {\n                  this.setState({ test: newTest }, this.onCodeChange);\n                }}\n                data={test}\n                readOnly={false}\n              />\n            </GridItem>\n            <GridItem key=\"control\">\n              <ControlWidget\n                type=\"javascript\"\n                onChangeName={name => this.setState({ name })}\n                onSubmit={this.onSubmit}\n                onChangeCategory={onChangeCategory}\n                categoryIndex={categoryIndex}\n                questionIndex={index}\n                questionList={questionList}\n                onChangeQuestion={this.onChangeQuestion}\n              />\n            </GridItem>\n            <GridItem key=\"tape\">\n              <TapeWidget data={tape} />\n            </GridItem>\n            <GridItem key=\"tag\">\n              <TagWidget data={tags} onTagUpdate={this.onTagUpdate} />\n            </GridItem>\n          </Grid>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default JavaScriptPage;\n","import React, { Component } from 'react';\n\nimport { updateQuestion } from 'app/utils/question';\n\nimport ReactPage from './ReactPage';\nimport JavaScriptPage from './JavaScriptPage';\n\n\nconst getPageComponent = (args) => {\n  switch (args.index) {\n    case 1: {\n      return <ReactPage {...args} />;\n    }\n    default: {\n      return <JavaScriptPage {...args} />;\n    }\n  }\n};\n\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { category: 0 };\n  }\n\n  componentDidMount() {\n    const { state, history } = this.props;\n    // if (!state.login.isLogin) {\n    //   history.push('/login');\n    //   return;\n    // }\n  }\n\n  onChangeCategory = (index) => {\n    this.setState({ category: index });\n  }\n\n  onSubmit = async (data) => {\n    try {\n      await updateQuestion(data);\n    } catch (e) {\n      alert(e.message);\n    }\n  }\n\n  render() {\n    const { category } = this.state;\n    return (\n      <React.Fragment>\n        {\n          getPageComponent({\n            index: category,\n            onSubmit: this.onSubmit,\n            onChangeCategory: this.onChangeCategory,\n            categoryIndex: category\n          })\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Page;\n","import React, { Component } from 'react';\n\nconst NotFoundPage = () => (\n  <div>Not found</div>\n);\n\nexport default NotFoundPage;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Amplify from 'aws-amplify';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport AwsConfig from 'aws-exports';\n\nimport QuestionAddPage from 'app/pages/QuestionPage/AddPage';\nimport QuestionEditPage from 'app/pages/QuestionPage/EditPage';\nimport NotFoundPage from 'app/pages/NotFoundPage';\n\nAmplify.configure(AwsConfig);\n\n// Auth.signUp({\n//   username: 'Admin',\n//   password: 'Admin@123456',\n//   attributes: {\n//     email: 'test@innova.com'\n//   }\n// })\n//   .then(data => console.log(data))\n//   .catch(err => console.log(err));\n\n\n// class Admin extends Component {\n//   state = {\n//     isLoading: true\n//   }\n\n//   render() {\n//     const { isLoading, isLogin } = this.state;\n//     const { match } = this.props;\n//     return (\n//       <Switch>\n//         <Route path={`${match.path}/question`} component={QuestionPage} />\n//         <Route component={NotFoundPage} />\n//       </Switch>\n//     );\n//   }\n// }\n\n// const session = Amplify.Auth.currentSession()\n//   .then(s => {\n//     console.log(s.getAccessToken().getJwtToken());\n//   });\n\nconst Question = ({ match }) => (\n  <Switch>\n    <Route path={`${match.path}/add`} component={QuestionAddPage} />\n    <Route path={`${match.path}/edit`} component={QuestionEditPage} />\n    <Route component={NotFoundPage} />\n  </Switch>\n);\n\nconst Admin = ({ match }) => (\n  <Switch>\n    <Route path={`${match.path}/question`} render={Question} />\n    <Route component={NotFoundPage} />\n  </Switch>\n);\n\nexport default withAuthenticator(Admin);\n","import React from 'react';\nimport { Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { submitPassword } from 'app/actions/login';\nimport styles from './LoginPage.module.scss';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { password: '', error: '' };\n  }\n\n  componentDidUpdate() {\n    const { isLogin, history } = this.props;\n    if (isLogin) {\n      history.push('/');\n    }\n  }\n\n  onSubmit = (e) => {\n    const { password } = this.state;\n    const { actions } = this.props;\n    e.preventDefault();\n    actions.submitPassword(password);\n  }\n\n  render() {\n    const { error } = this.state;\n    return (\n      <div className={styles.login}>\n        <form onSubmit={this.onSubmit}>\n          <div style={{ display: 'flex' }}>\n            <Input\n              placeholder=\"input the password to login\"\n              onChange={e => this.setState({ password: e.target.value })}\n              style={{ width: 200, marginRight: 5 }}\n            />\n            <Button type=\"primary\" htmlType=\"submit\">Login</Button>\n          </div>\n        </form>\n        <div className={styles.error}>{ error }</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  (state) => {\n    return {\n      isLogin: state.login.isLogin\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        submitPassword: password => dispatch(submitPassword(password))\n      }\n    };\n  }\n)(LoginPage));\n","export function submitPassword(password) {\n  return {\n    type: 'LOGIN/LOGIN',\n    password\n  };\n}\n","const createWrappedConsole = (console, dispatch) => {\n  return Object.keys(console).reduce((cal, key) => {\n    const newCal = { ...cal };\n    newCal[key] = (...args) => {\n      dispatch({ type: 'CONSOLE/ADD', key, args: [...args] });\n    };\n    return newCal;\n  }, {});\n};\n\nexport default createWrappedConsole;\n","import { getQuestions, getCategories } from 'app/questions/index';\n\nconst categories = getCategories();\n\nconst getStateInformation = (state) => {\n  const categoryIndex = state.category.index;\n  const type = categories[categoryIndex].name;\n  const questionIndex = state[type].index;\n  const questions = getQuestions(type);\n  const question = questions[questionIndex];\n  const { index, compiledCode } = state[type];\n  const code = (state[type][index] && state[type][index].code) || questions[questionIndex].content;\n  return {\n    type,\n    categoryIndex,\n    questionIndex,\n    questions,\n    question,\n    code,\n    compiledCode\n  };\n};\n\nexport {\n  getStateInformation\n};\n","import React from 'react';\nimport styles from './ConsoleWidget.module.scss';\n\nconst isError = e => e && e.stack && e.message && typeof e.stack === 'string' && typeof e.message === 'string';\n\nconst Text = ({ text }) => <>{ `${text}`.trim() === '' ? <br /> : `${text}`.trim() }</>;\n\nconst ConsoleWidget = ({ data, className }) => (\n  <div className={`${styles['console-widget']} ${className || ''}`}>\n    Console:\n    {\n      data.map(({ args }) => (\n        <div className={styles.console} key={args}>\n          {\n            args.map((text, index) => (\n              <div className={styles.text} key={index}>\n                {\n                  typeof text === 'object' && !isError(text)\n                    ? JSON.stringify(text, null, 2)\n                    : <Text text={text} />\n                }\n              </div>\n            ))\n          }\n        </div>\n      ))\n    }\n  </div>\n);\n\nexport default ConsoleWidget;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { resetQuestion, changeQuestion } from 'app/actions/code';\nimport { changeCategory } from 'app/actions/category';\n\nimport QuestionSelector from 'app/components/Selectors/QuestionSelector';\nimport CategorySelector from 'app/components/Selectors/CategorySelector';\n\nimport { getStateInformation } from 'app/utils/stateHelper';\n\nimport { Button } from 'antd';\nimport styles from './ControlWidget.module.scss';\n\nconst ControlWidget = ({\n  categoryIndex,\n  questionIndex,\n  onReset,\n  onChangeCategory,\n  onChangeQuestion,\n  questionList\n}) => (\n  <div className={styles.control}>\n    <CategorySelector\n      onChange={onChangeCategory}\n      index={categoryIndex}\n    />\n    <QuestionSelector\n      onChange={onChangeQuestion}\n      index={questionIndex}\n      list={questionList}\n    />\n    <Button type=\"danger\" onClick={onReset}>Reset</Button>\n  </div>\n);\n\nexport default ControlWidget;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport ConsoleWidget from 'app/components/Widgets/ConsoleWidget';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport ControlWidget from 'app/components/Widgets/ControlWidget';\nimport ResultWidget from 'app/components/Widgets/ResultWidget';\nimport AnswerWidget from 'app/components/Widgets/AnswerWidget';\n\nimport { resetConsole } from 'app/actions/console';\n\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport { getQuestions } from 'app/questions/index';\n\nimport styles from './ReactPage.module.scss';\n\nconst questions = getQuestions('react');\n\nclass ReactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n  }\n\n  componentDidMount() {\n    const { compiledCode, wrappedConsole, actions } = this.props;\n    actions.resetConsole();\n    debouncedRunCode({ code: compiledCode, wrappedConsole });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { compiledCode: previousCompiledCode } = this.props;\n    const { compiledCode, wrappedConsole, actions } = nextProps;\n    if (previousCompiledCode !== compiledCode) {\n      actions.resetConsole();\n      debouncedRunCode({ code: compiledCode, wrappedConsole });\n    }\n    return true;\n  }\n\n  render() {\n    const {\n      code,\n      questionIndex,\n      categoryIndex,\n      handleCodeChange,\n      console: _console,\n      onReset,\n      onChangeCategory,\n      onChangeQuestion\n    } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'answer', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'result', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'console', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>\n        <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n          <GridItem key=\"code\">\n            <CodeWidget\n              handleCodeChange={handleCodeChange}\n              data={code}\n              mode=\"jsx\"\n              theme=\"monokai\"\n            />\n          </GridItem>\n          <GridItem key=\"answer\">\n            <AnswerWidget />\n          </GridItem>\n          <GridItem key=\"control\">\n            <ControlWidget\n              type=\"react\"\n              onReset={() => onReset('react')}\n              onChangeCategory={onChangeCategory}\n              onChangeQuestion={index => onChangeQuestion({ type: 'react', index })}\n              questionList={questions}\n              categoryIndex={categoryIndex}\n              questionIndex={questionIndex}\n            />\n          </GridItem>\n          <GridItem key=\"result\">\n            <ResultWidget />\n          </GridItem>\n          <GridItem key=\"console\">\n            <ConsoleWidget data={_console} />\n          </GridItem>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  () => {\n    return {\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        resetConsole: () => dispatch(resetConsole())\n      }\n    };\n  }\n)(ReactPage));\n","export function resetConsole() {\n  return {\n    type: 'CONSOLE/RESET'\n  };\n}\n\nexport function addConsole(key, ...args) {\n  return {\n    type: 'CONSOLE/ADD',\n    key,\n    args: [...args]\n  };\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport ConsoleWidget from 'app/components/Widgets/ConsoleWidget';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport TestWidget from 'app/components/Widgets/TestWidget';\nimport TapeWidget from 'app/components/Widgets/TapeWidget';\nimport ControlWidget from 'app/components/Widgets/ControlWidget';\n\nimport { addTape, resetTape } from 'app/actions/tape';\nimport { resetConsole } from 'app/actions/console';\n\nimport { getQuestions } from 'app/questions/index';\n\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport styles from './JavaScriptPage.module.scss';\n\nconst questions = getQuestions('javascript');\n\nclass JavaScriptPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n  }\n\n  componentDidMount() {\n    const { compiledCode, wrappedConsole, actions } = this.props;\n    actions.resetConsole();\n    debouncedRunCode({ code: compiledCode, wrappedConsole, onTapeUpdate: actions.addTape });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { compiledCode: previousCompiledCode } = this.props;\n    const { compiledCode, wrappedConsole, actions } = nextProps;\n    if (previousCompiledCode !== compiledCode) {\n      actions.resetConsole();\n      actions.resetTape();\n      debouncedRunCode({ code: compiledCode, wrappedConsole, onTapeUpdate: actions.addTape });\n    }\n    return true;\n  }\n\n  render() {\n    const {\n      code,\n      questionIndex,\n      categoryIndex,\n      handleCodeChange,\n      tape,\n      console: _console,\n      onReset,\n      onChangeCategory,\n      onChangeQuestion\n    } = this.props;\n    const { test } = questions[questionIndex];\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'tape', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'console', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>\n        <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n          <GridItem key=\"code\">\n            <CodeWidget\n              handleCodeChange={handleCodeChange}\n              data={code}\n              mode=\"javascript\"\n              theme=\"monokai\"\n            />\n          </GridItem>\n          <GridItem key=\"test\">\n            <TestWidget data={test} />\n          </GridItem>\n          <GridItem key=\"control\">\n            <ControlWidget\n              onReset={() => onReset('javascript')}\n              onChangeCategory={onChangeCategory}\n              onChangeQuestion={index => onChangeQuestion({ type: 'javascript', index })}\n              questionList={questions}\n              categoryIndex={categoryIndex}\n              questionIndex={questionIndex}\n            />\n          </GridItem>\n          <GridItem key=\"tape\">\n            <TapeWidget data={tape} />\n          </GridItem>\n          <GridItem key=\"console\">\n            <ConsoleWidget data={_console} />\n          </GridItem>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  (state) => {\n    return {\n      tape: state.tape\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        resetTape: () => dispatch(resetTape()),\n        addTape: data => dispatch(addTape(data)),\n        resetConsole: () => dispatch(resetConsole())\n      }\n    };\n  }\n)(JavaScriptPage));\n","export function resetTape() {\n  return {\n    type: 'TAPE/RESET'\n  };\n}\n\nexport function addTape(data) {\n  return {\n    type: 'TAPE/ADD',\n    data\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { transform } from '@babel/standalone';\n\nimport { resetQuestion, changeQuestion, changeCode } from 'app/actions/code';\nimport { changeCategory } from 'app/actions/category';\nimport { resetConsole } from 'app/actions/console';\n\nimport createWrappedConsole from 'app/utils/consoleFactory';\nimport { getStateInformation } from 'app/utils/stateHelper';\n\nimport ReactPage from './ReactPage';\nimport JavaScriptPage from './JavaScriptPage';\n\nconst getPageComponent = (args) => {\n  switch (args.index) {\n    case 1: {\n      return <ReactPage {...args} />;\n    }\n    default: {\n      return <JavaScriptPage {...args} />;\n    }\n  }\n};\n\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    const { actions } = this.props;\n    const { _dispatch: dispatch } = actions;\n    this.wrappedConsole = createWrappedConsole(console, dispatch);\n  }\n\n  componentDidMount() {\n    const { isLogin, history, code } = this.props;\n    if (!isLogin) {\n      history.push('/login');\n      return;\n    }\n    this.handleCodeChange(code);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { categoryIndex: previousCategoryIndex } = prevProps;\n    const { categoryIndex, code } = this.props;\n    if (previousCategoryIndex !== categoryIndex) {\n      this.handleCodeChange(code);\n    }\n  }\n\n  handleCodeChange = (newCode) => {\n    const { actions, type, question } = this.props;\n    const fullCode = `${newCode} ${question.test}`;\n    try {\n      const { code } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      actions.changeCode({ compiledCode: code, rawCode: newCode, type });\n    } catch (e) {\n      actions.changeCode({ rawCode: newCode, type });\n      actions.resetConsole();\n      this.wrappedConsole.log(e);\n    }\n  }\n\n\n  onReset = (type) => {\n    const { actions } = this.props;\n    actions.resetQuestion(type);\n  }\n\n  onChangeCategory = (index) => {\n    const { actions } = this.props;\n    actions.changeCategory(index);\n  }\n\n  onChangeQuestion = ({ index, type }) => {\n    const { actions } = this.props;\n    actions.changeQuestion({ index, type });\n  }\n\n  render() {\n    const {\n      categoryIndex\n    } = this.props;\n    const {\n      handleCodeChange,\n      wrappedConsole,\n      onReset,\n      onChangeCategory,\n      onChangeQuestion\n    } = this;\n    return (\n      <>\n        {\n          getPageComponent({\n            index: categoryIndex,\n            handleCodeChange,\n            wrappedConsole,\n            onReset,\n            onChangeCategory,\n            onChangeQuestion,\n            ...this.props\n          })\n        }\n      </>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  (state) => {\n    const {\n      code,\n      questionIndex,\n      compiledCode,\n      categoryIndex,\n      type,\n      question\n    } = getStateInformation(state);\n    return {\n      compiledCode,\n      questionIndex,\n      code,\n      console: state.console,\n      categoryIndex,\n      type,\n      question,\n      isLogin: state.login.isLogin\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        resetConsole: () => dispatch(resetConsole()),\n        changeCode: args => dispatch(changeCode({ ...args, type: (args.type || 'javascript').toUpperCase() })),\n        _dispatch: dispatch,\n        resetQuestion: type => dispatch(resetQuestion({ type: type.toUpperCase() })),\n        changeCategory: index => dispatch(changeCategory(index)),\n        changeQuestion: ({ index, type }) => dispatch(changeQuestion({ index, type }))\n      }\n    };\n  }\n)(Page));\n","export function changeCode({ compiledCode, rawCode, type }) {\n  return {\n    type: `${type}/CODE/CHANGE`,\n    compiledCode,\n    rawCode\n  };\n}\n\nexport function changeQuestion({ index, type }) {\n  return {\n    type: `${type}/QUESTION/CHANGE`,\n    index\n  };\n}\n\nexport function resetQuestion({ type }) {\n  return {\n    type: `${type}/QUESTION/RESET`\n  };\n}\n","export function changeCategory(index) {\n  return {\n    type: 'CATEGORY/CHANGE',\n    index\n  };\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport LoginPage from 'app/pages/LoginPage';\nimport ExamPage from 'app/pages/ExamPage';\nimport NotFoundPage from 'app/pages/NotFoundPage';\n\nconst Guest = ({ match }) => (\n  <Switch>\n    <Route path=\"/login\" component={LoginPage} />\n    <Route path=\"/\" component={ExamPage} />\n    <Route component={NotFoundPage} />\n  </Switch>\n);\n\nexport default Guest;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Admin from 'app/routes/Admin';\nimport Guest from 'app/routes/Guest';\n\nconst { PUBLIC_URL } = process.env;\n\nconst App = () => (\n  <Router basename={PUBLIC_URL}>\n    <div>\n      <Switch>\n        <Route path=\"/admin\" component={Admin} />\n        <Route path=\"/\" component={Guest} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport 'antd/dist/antd.css';\n\nimport { initErrorLogging } from 'app/utils/sentry';\n\nimport reducer from 'app/reducers';\nimport App from './App';\nimport './index.css';\n\ninitErrorLogging();\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}